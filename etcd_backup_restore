# ETCD란
- coreos가 만든 분산 key:value 형태의 데이터 스토리지
- k8s 클러스터의 정보를 저장(memory)해서 사용
- 모든 etcd 데이터는 etcd 데이터베이스 파일에 보관 : /var/lib/etcd

- etcd 관리명령 : etcdctl
- etcdctl 설치 확인
  $ ssh k8s-master
  $ cd /var/lib/etcd
  $ tree
  $ cd /etc/kubernetes/manifests/
  $ ls
  $ vi etcd.yaml

- 동작 중인 etcd 버전과 etcdctl 툴이 설치여부 확인
  $ etcd --version
  $ etcdctl version


- 동작 pod 확인
  $ kubectl get pod -n kube-system

# ETCD Backup
- mastr의 장애와 같은 예기치 못한 사고로 인해 ETCD 데이터베이스가 유실될 경우를 대비해서 backup API를 제공
- ETCD snapshot

# ETCD Restore
- Snapshot으로 저장한 database 파일을 동작 중인 etcd에 적용하여 snapshot 생성 시점으로 되돌리기
- 단계
(1) snapshot 파일을 데이터베이스 파일로 복원
(2) 동작중인 etcd pod의 구성정보를 복원된 데이터베이스 위치로 수정 적용


# ETCD 실습
- ETCD를 호스팅 할 시스템에 ssh 로그인
  $ ssh k8s-master

- etcdctl 설치 여부 확인
  $ etcdctl version

- ETCD Backup
  sudo ETCDCTL_API=3 etcdctl --endpoints=https://127.0.0.1:2379 \
  --cacert=/etc/kubernetes/pki/etcd/ca.crt \
  --cert=/etc/kubernetes/pki/etcd/server.crt \
  --key=/etc/kubernetes/pki/etcd/server.key \
  snapshot save /tmp/etcd-backup

- trusted-ca-file 확인
  $ ps -ef | grep kube | grep trusted-ca-file

  /etc/kubernetes/pki/etcd/ca.crt

- cert-file 확인
  $ ps -ef | grep kube | grep cert-file

  /etc/kubernetes/pki/etcd/server.crt 

- key-file 확인
  $ ps -ef | grep kube | grep key-file

  /etc/kubernetes/pki/sa.key


- 1. ETCD Restore
- new database dir : /var/lib/etcd-new

 sudo ETCDCTL_API=3 etcdctl \
 --data-dir /var/lib/etcd-new \
 snapshot restore /tmp/etcd-backup

- 2. etcd pod의 data 저장소를 /var/lib/etcd-new로 변경해서 실행

  $ sudo docker ps -a | grep etcd


# test

# Backup
sudo ETCDCTL_API=3 etcdctl --endpoints=https://127.0.0.1:2379 \
   --cacert=/etc/kubernetes/pki/etcd/ca.crt \
   --cert=/etc/kubernetes/pki/etcd/server.crt \
   --key=/etc/kubernetes/pki/etcd/server.key \
   snapshot save /data/etcd-snapshot.db

sudo ls -l /data/etcd-snapshot.db


# Restore
 sudo ETCDCTL_API=3 etcdctl \
 --data-dir /var/lib/etcd-previous \
 snapshot restore /data/etcd-snapshot.db

$ sudo tree /var/lib/etcd-previous/
/var/lib/etcd-previous/
└── member
    ├── snap
    │   ├── 0000000000000001-0000000000000001.snap
    │   └── db
    └── wal
        └── 0000000000000000-0000000000000000.wal











